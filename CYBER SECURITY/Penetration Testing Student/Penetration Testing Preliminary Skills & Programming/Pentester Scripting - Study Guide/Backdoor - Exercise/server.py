import socket
import pickle
import sys


def main() -> int:
    HOST = ''    # Symbolic name meaning all available interfaces
    PORT = 27015    # Arbitrary non-privileged port
    try:
        with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
            s.bind((HOST, PORT))
            s.listen(1)
            print("[INFO] listening on {} {} ...".format(HOST, PORT))
            conn, addr = s.accept()
            count = 0
            with conn:
                print('[INFO] Connected by', addr)
                while True:
                    raw = conn.recv(1048576)
                    try:
                        if raw:
                            data = pickle.loads(raw)
                            # Execute system commands
                            if len(data) == 3:
                                print("[INFO] The result of execute command '{}'".format(" ".join(data[2])))
                                print("[STDOUT] \n{}".format(data[0]))
                                print("[STDERR] \n{}".format(data[1]))

                            # Get the content in the specified directory
                            if len(data) == 5:
                                print("[INFO] The entries in the directory given by {}: ".format(''.join(data[3])))
                                print("[INFO] Files: ", data[0])
                                print("[INFO] Folders: ", data[1])
                                print("[INFO] Symlinks: ", data[2])
                                print()
                        else:
                            print("[INFO] The client has closed the connection. Please restart the server script, then restart the client script.")
                            break
                    except ValueError:
                        print("[ERROR] The client has sent invalidate data. Please use matched client to connect to server. Don't use netcat or ncat.")
                        sys.exit(0)
                    except pickle.UnpicklingError:
                        print("[ERROR] The client has sent invalidate data. Please use matched client to connect to server. Don't use netcat or ncat.")
                        sys.exit(0)

    except socket.error:
        print("[ERROR] Failed to initialize socket.")
    finally:
        s.close()


    return 0


if __name__ == '__main__':
    sys.exit(main())